# Github action to build Raspberry Pi image from main branch

name: Update rpi-imager repo

on:
  workflow_dispatch:

jobs:
  update_rpi-imager:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ioBroker.raspberry-os
        uses: actions/checkout@v3
        with:
          repository: 'buanet/ioBroker.raspberry-os'
          ref: main

      - name: Update rpi-imager.json
        run: |
          echo 'Fetch latest release tag...'
          RELEASE_TAG="$(curl -sL https://api.github.com/repos/buanet/ioBroker.raspberry-os/releases/latest | jq -r '.tag_name')"
          echo "Latest release tag: $RELEASE TAG"
          echo 'Done.'
          echo ' '
          echo 'Download latest ioBroker Raspberry Pi image...'
          URL=$(curl -sL https://api.github.com/repos/buanet/ioBroker.raspberry-os/releases/latest | jq -r '.assets[].browser_download_url' | tail -n1)
          echo "Download URL: $URL"
          wget -q $URL
          FILE_NAME_ZIP=$(find ./ -name '*.zip')
          echo "ZIP File name: $FILE_NAME_ZIP"
          DATE=$(find *.zip | cut -c 1-10)
          echo "Date: $DATE"
          echo 'Done.'
          echo ' '
          echo 'Fetch information for download file...'
          DL_SIZE=$(ls -l $FILE_NAME_ZIP | awk '{print $5;}')
          echo "Download size: $DL_SIZE"
          DL_CHKS=$(sha256sum $FILE_NAME_ZIP | awk '{print $1;}')
          echo "Download checksum: $DL_CHKS"
          echo 'Done.'
          echo ' '
          echo 'Fetch information for image file...'
          unzip $FILE_NAME_ZIP -d ./
          FILE_NAME_IMG=$(find ./ -name '*.img')
          echo "IMG File name: $FILE_NAME_IMG"
          IMG_SIZE=$(ls -l $FILE_NAME_IMG | awk '{print $5;}')
          echo "Image size: $IMG_SIZE"
          IMG_CHKS=$(sha256sum $FILE_NAME_IMG | awk '{print $1;}')
          echo "Image checksum: $IMG_CHKS"
          echo 'Done.'
          echo ' '
          echo 'Update rpi-imager.json...'
          jq ".os_list[].name = \"ioBroker Raspberry Pi OS ${RELEASE_TAG} (32bit)\" | \
              .os_list[].url = \"${URL}\" | \
              .os_list[].release_date = \"${DATE}\" | \
              .os_list[].extract_size = ${IMG_SIZE} | \
              .os_list[].extract_sha256 = \"${IMG_CHKS}\" | \
              .os_list[].image_download_size = ${DL_SIZE} | \
              .os_list[].image_download_sha256 = \"${DL_CHKS}\"" ./rpi-imager/rpi-imager.json > ./rpi-imager-tmp.json
          mv ./rpi-imager-tmp.json ./rpi-imager/rpi-imager.json
          echo 'Done.'
          echo ' '
          echo 'Remove downloaded files...'
          rm $FILE_NAME_ZIP
          rm $FILE_NAME_IMG
          echo 'Done.'

      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")

      - name: Commit latest release version
        if: steps.git-check.outputs.modified == 'true'
        run: |
          echo 'Publish rpi-imager.json...'
          git config --global user.name 'buanet'
          git config --global user.email 'info@buanet.de'
          git commit -am "update information for rpi-imager"
          git push
          echo 'Done.'